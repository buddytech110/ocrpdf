<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="749,3186" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="756,3021" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Object[]" Name="varpdFile" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="714,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Object[]">[varpdFile]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Object[]">[Directory.GetFiles("ScannedDocument","*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="714,2829" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[varpdFile]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="currentRow" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="678,2694" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="636,2450" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[currentRow.ToString]" sap:VirtualizedContainerService.HintSize="594,87" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
              <Sequence DisplayName="PDFScreenScraping" sap:VirtualizedContainerService.HintSize="594,2231" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="varOCRTextOutput" />
                  <Variable x:TypeArguments="x:String" Name="getProductName" />
                  <Variable x:TypeArguments="x:String" Name="zoomSize">
                    <Variable.Default>
                      <Literal x:TypeArguments="x:String">50</Literal>
                    </Variable.Default>
                  </Variable>
                  <Variable x:TypeArguments="x:String" Name="getPreparedBy" />
                  <Variable x:TypeArguments="x:String" Name="addressPreparedFor" />
                  <Variable x:TypeArguments="x:String" Name="addressPreparedBy" />
                  <Variable x:TypeArguments="x:String" Name="getPreparedFor" />
                  <Variable x:TypeArguments="x:String" Name="varTestDate" />
                  <Variable x:TypeArguments="x:String" Name="varModelName" />
                  <Variable x:TypeArguments="x:String" Name="varDateofReport" />
                  <Variable x:TypeArguments="x:String" Name="varReportNo" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="552,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,281" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[currentRow.ToString]" sap:VirtualizedContainerService.HintSize="334,189" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_2" ImageDpi="150" Range="All" Text="[varOCRTextOutput]">
                        <ui:ReadPDFWithOCR.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_2" Image="[Image]" />
                          </ActivityFunc>
                        </ui:ReadPDFWithOCR.OCREngine>
                      </ui:ReadPDFWithOCR>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="552,52" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="272,154" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;OCR Text: &quot; + varOCRTextOutput]" />
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach PDF" sap:VirtualizedContainerService.HintSize="552,1764" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="924593bae407a78249e63b1563ba2708" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Reader' /&gt;">
                  <ui:WindowScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Scraping PDF Details" sap:VirtualizedContainerService.HintSize="518,1618" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,682" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window reading untagged " sap:VirtualizedContainerService.HintSize="434,406" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="5f434041c3de833c6cd7591c6adf67f6" Selector="&lt;wnd app='acrord32.exe' cls='#32770' title='Reading Untagged Document' /&gt;">
                            <ui:WindowScope.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,260" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="5" DelayMS="5" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f5664437-0ede-4916-bd42-5fbc2fa460b1" InformativeScreenshot="c239d175c7fcb6dc61bc0aebabdfb4b8" Selector="&lt;wnd aaname='Start' cls='Button' title='&amp;amp;Start' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:Click.Target>
                                  </ui:Click>
                                  <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                </Sequence>
                              </ActivityAction>
                            </ui:WindowScope.Body>
                          </ui:WindowScope>
                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DelayBefore="15" DelayMS="15" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="y" KeyModifiers="Ctrl">
                            <ui:SendHotkey.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="ada66a0a-4916-449f-8375-eddb2c31c48c">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:SendHotkey.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendHotkey>
                          <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window Zoom Size" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="WindowScope_4" InformativeScreenshot="af030a9a023ad8a44aef5ec1d4fbb328" Selector="&lt;wnd app='acrord32.exe' cls='#32770' title='Zoom To' /&gt;">
                            <ui:WindowScope.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,421" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Type Zoom %" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_2" SimulateType="True" Text="[zoomSize]">
                                    <ui:TypeInto.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3dbdf938-8c0d-46eb-9ea2-cb6e72429b18" InformativeScreenshot="20ce8718e95c827fc70ae57b7cd64c0a" Selector="&lt;wnd aaname='Magnification:' cls='ComboBoxEx32' /&gt;&lt;wnd aaname='Magnification:' cls='ComboBox' /&gt;&lt;wnd aaname='Magnification:' cls='Edit' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:TypeInto.Target>
                                  </ui:TypeInto>
                                  <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'acrord32.exe  Zoom To'" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="enter" KeyModifiers="None" SpecialKey="True">
                                    <ui:SendHotkey.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="fb1f89a4-cc60-40d0-a400-0eb15d59c0cc" InformativeScreenshot="7ada29163ce2038f3a325840d5fe34ea">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:SendHotkey.Target>
                                  </ui:SendHotkey>
                                </Sequence>
                              </ActivityAction>
                            </ui:WindowScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WindowScope>
                        </Sequence>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Product Name" sap:VirtualizedContainerService.HintSize="476,52" sap2010:WorkflowViewState.IdRef="GetOCRText_2">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_3" Image="[Image]" Scale="4" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="acfd3e8c-a0e5-45cc-8c98-082ca234a7d3" InformativeScreenshot="d63a4bd147f0d2278c3fc9e9f1b4b3f6" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="236, 219, 331, 16" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[getProductName]</OutArgument>
                          </ui:GetOCRText.Text>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:GetOCRText>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Model Name" sap:VirtualizedContainerService.HintSize="476,52" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_8" Image="[Image]" Scale="4" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="38eb75a3-9ef5-47c7-b297-90e4163169d4" InformativeScreenshot="533f9f2bfb320a4f19f59453326088c5" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="234, 276, 334, 22" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varModelName]</OutArgument>
                          </ui:GetOCRText.Text>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:GetOCRText>
                        <Sequence DisplayName="Scraping Prepared for" sap:VirtualizedContainerService.HintSize="476,236" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Prepared for" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_5" Image="[Image]" Scale="4" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="acfd3e8c-a0e5-45cc-8c98-082ca234a7d3" InformativeScreenshot="5e2613b72494f303eb1a5691f70ef518" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="235, 304, 335, 26" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[getPreparedFor]</OutArgument>
                            </ui:GetOCRText.Text>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetOCRText>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Prepared for Address" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_6" Image="[Image]" Scale="4" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="cc4efdc4-fc08-4f89-a153-8903eab24136" InformativeScreenshot="f4d4b64c6523b6edefca7845d27a2b03" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="233, 336, 336, 27" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[addressPreparedFor]</OutArgument>
                            </ui:GetOCRText.Text>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetOCRText>
                        </Sequence>
                        <Sequence DisplayName="Scraping Prepared By" sap:VirtualizedContainerService.HintSize="476,68" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Prepared By" sap:VirtualizedContainerService.HintSize="334,306" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_4" Image="[Image]" Scale="4" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="acfd3e8c-a0e5-45cc-8c98-082ca234a7d3" InformativeScreenshot="035b96b4f21393cc7efab3721360a5e2" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="234, 369, 334, 16" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[getPreparedBy]</OutArgument>
                            </ui:GetOCRText.Text>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetOCRText>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Prepared By Address" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_7" Image="[Image]" Scale="4" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="ac3f31c9-f518-4bf5-96d3-bae0f050f29b" InformativeScreenshot="00f0b250ed777a3787f26bf6dfff6765" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="234, 394, 335, 29" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[addressPreparedBy]</OutArgument>
                            </ui:GetOCRText.Text>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetOCRText>
                        </Sequence>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Test Date" sap:VirtualizedContainerService.HintSize="476,52" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_9" Image="[Image]" Scale="4" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="9c60dcde-a256-4a86-b568-9941d066858b" InformativeScreenshot="9676b70d854476e28b56aa0736c1a31d" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="235, 430, 332, 18" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varTestDate]</OutArgument>
                          </ui:GetOCRText.Text>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:GetOCRText>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR DateOfReport" sap:VirtualizedContainerService.HintSize="476,52" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_10" Image="[Image]" Scale="4" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="e9855b56-4342-4e98-b935-9dbaff01e7a7" InformativeScreenshot="1382fde4e380277e99e64195076effe5" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="234, 460, 335, 19" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varDateofReport]</OutArgument>
                          </ui:GetOCRText.Text>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:GetOCRText>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR ReportNo" sap:VirtualizedContainerService.HintSize="476,52" sap2010:WorkflowViewState.IdRef="GetOCRText_10">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_11" Image="[Image]" Scale="4" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="e04bc924-d876-49c6-bbec-f9ed7f37a4c8" InformativeScreenshot="880d695af2ac4b9856d121ef7b90350c" Selector="&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="234, 490, 334, 21" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varReportNo]</OutArgument>
                          </ui:GetOCRText.Text>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:GetOCRText>
                      </Sequence>
                    </ActivityAction>
                  </ui:WindowScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WindowScope>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="552,52" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Successfully Scrapped PDF&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="552,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Product Name: &quot; +getProductName  + vbCr +&#xD;&#xA;&quot;Model Name: &quot; + varModelName + vbCr +&#xD;&#xA;&quot;Prepared By: &quot; + getPreparedBy +vbCr +&#xD;&#xA;&quot;Address: &quot; + addressPreparedBy +vbCr +&#xD;&#xA;&quot;Prepared For: &quot; + getPreparedFor + vbCr+&#xD;&#xA;&quot;Address: &quot; + addressPreparedFor + vbCr +&#xD;&#xA;&quot;Test Date: &quot; + varTestDate + vbCr +&#xD;&#xA;&quot;Date of Report: &quot; + varDateofReport + vbCr+&#xD;&#xA;&quot;Report Number: &quot; + varReportNo]" />
              </Sequence>
            </Sequence>
            <ui:CloseApplication DisplayName="Close PDF Application" sap:VirtualizedContainerService.HintSize="636,106" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="660b5761-46bf-4b25-9023-8720642b5897" InformativeScreenshot="84d354c888e88b15d2842902d0464407" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Reader' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>